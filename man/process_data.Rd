% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_data.R
\name{process_data}
\alias{process_data}
\title{Process the data from a CourseKata data download.}
\usage{
process_data(
  path,
  time_zone = "UTC",
  split_responses = FALSE,
  convert_json = FALSE,
  env = rlang::global_env()
)
}
\arguments{
\item{path}{The path to a CourseKata data download zip file or the path to an extracted data
download directory.}

\item{time_zone}{The time zone to use when parsing date-time objects (see \code{\link{timezones}}).}

\item{split_responses}{If \code{TRUE}, split the responses out into three tables (\code{surveys},
\code{quizzes}, \code{in_text}) via \code{\link{split_responses}}.}

\item{convert_json}{For speed of processing, columns containing JSON are just read in as strings.
If you are going to use these data, it may be useful to convert them to lists by specifying
this argument as \code{TRUE}.}

\item{env}{The \link{environment} to create the variables in (defaults to the global environment). In
most cases, the function will be used interactively and you will want to create the variables
in the global environment, so that is the default behavior. In testing or programmatic
applications it is useful to control where the variables are created, so an environment can be
passed to capture them, e.g. by setting \code{env = rlang::env()}.}
}
\value{
This function returns the environment that the data frames were created in. Usually you
can ignore this return value and just use the variables as you need. If you are an advanced user
and you supplied an environment to \code{env}, that environment is returned.
}
\description{
This function loads and processes data from a CourseKata end-of-class downloads. To use it, just
point it to the zip file or folder that you downloaded from CourseKata and run it. It will load
all of the data (showing progress bars along the way) and output it into several data frames:
\code{classes}, \code{responses}, \code{items}, \code{page_views}, \code{media_views}, and \code{tags}. If any of those
variables already exist, you will be prompted to either allow overwriting or abort the process
(if not being run interactively, a message is emitted noting that the variables were
overwritten).
}
